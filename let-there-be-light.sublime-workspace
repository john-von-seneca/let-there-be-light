{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"argum",
				"argument"
			],
			[
				"fi",
				"file	class"
			],
			[
				"jo",
				"join	function"
			],
			[
				"v",
				"vblog_curr_dir	statement"
			],
			[
				"re",
				"replace	function"
			],
			[
				"cu",
				"curr_file_full_path	statement"
			],
			[
				"cur",
				"curr_file_full_path	statement"
			],
			[
				"vblo",
				"vblog_curr_dir"
			],
			[
				"rel",
				"rel_path_dwlds"
			],
			[
				"curr",
				"curr_dir_full_path	statement"
			],
			[
				"dw",
				"dwlds_dir"
			],
			[
				"d",
				"dwld_dir"
			],
			[
				"pa",
				"path	module"
			],
			[
				"rel_",
				"rel_path_sulley	statement"
			],
			[
				"dwl",
				"dwlds_dir"
			],
			[
				"ro",
				"root	forstmt"
			],
			[
				"vb",
				"vblog_dir	statement"
			],
			[
				"head",
				"headers_2"
			],
			[
				"para",
				"parameters_2"
			],
			[
				"file",
				"file_type	statement"
			],
			[
				"war",
				"warnings	(.emacs)"
			],
			[
				"ali",
				"alias"
			]
		]
	},
	"buffers":
	[
		{
			"file": "zshrc_custom",
			"settings":
			{
				"buffer_size": 5047,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "packa",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b4428bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + '2915d1851351e5ee549c20394736b4428bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"mport urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dragon/neo-human/repos/let-there-be-light"
	],
	"file_history":
	[
		"/Users/dragon/neo-human/repos/let-there-be-light/zshrc_custom_osx",
		"/Users/dragon/neo-human/repos/let-there-be-light/conkyrc",
		"/Users/dragon/neo-human/repos/let-there-be-light/zshrc",
		"/Users/dragon/neo-human/programs/vanity-fair/hydrogen/src/find_connected_graphs.cc",
		"/Users/dragon/neo-human/programs/vanity-fair/hydrogen/compute_certificates.cc",
		"/Users/dragon/neo-human/programs/vanity-fair/hydrogen/Makefile",
		"/Users/dragon/neo-human/programs/vanity-fair/hydrogen/hydrogen.sublime-project",
		"/Users/dragon/.zshrc",
		"/Users/dragon/neo-human/repos/let-there-be-light/zshrc_custom_linux",
		"/Users/dragon/neo-human/repos/let-there-be-light/zshrc_custom",
		"/Users/dragon/neo-human/repos/let-there-be-light/gitconfig",
		"/Users/dragon/neo-human/programs/playground/measurable-spaces/add-file.py",
		"/Users/dragon/.gitconfig",
		"/Users/dragon/tmp-scaziber/videos-sync.py",
		"/Users/dragon/Downloads/videos/videos-sync.py",
		"/Users/dragon/neo-human/repos/500lines/README.md",
		"/Users/dragon/neo-human/programs/playground/pocket-app/zeroth.rb",
		"/Users/dragon/Library/Application Support/Alfred 2/Alfred.alfredpreferences/workflows/user.workflow.F61A7F60-492E-4CBF-AAC5-B7E7B2D9FED2/libgen.py",
		"/Users/dragon/Downloads/ril_export (1).html",
		"/Users/dragon/Library/Application Support/Dash/library.dash",
		"/Users/dragon/.emacs.d/customizations/04-ess.el",
		"/Users/dragon/.emacs.d/customizations/00-global.el",
		"/Users/dragon/.emacs.d/.emacs",
		"/Users/dragon/Library/Jupyter/kernels/python3/kernel.json",
		"/Users/dragon/neo-human/programs/scripts/use-tor.sh",
		"/Users/dragon/.emacs.d/Cask",
		"/Users/dragon/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/dragon/.emacs.d/customizations/04-haskell.el",
		"/Users/dragon/.zsh",
		"/Users/dragon/.slate",
		"/Users/dragon/Library/Application Support/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/Users/dragon/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/dragon/neo-human/repos/let-there-be-light/init_the_world.sh",
		"/Users/dragon/.emacs.d/install.sh"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"dwlds_dir",
			"vblog_dir"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "zshrc_custom",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5047,
						"regions":
						{
						},
						"selection":
						[
							[
								3767,
								3773
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2060.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_sublime_load":
	{
		"height": 130.0
	},
	"output.markdown":
	{
		"height": 130.0
	},
	"pinned_build_system": "Packages/Markdown Preview/Markdown.sublime-build",
	"project": "let-there-be-light.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"glo",
				"customizations/00-global.el"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
